// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketGameProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketGameProtocol {

  /// <summary>Holder for reflection information generated from SocketGameProtocol.proto</summary>
  public static partial class SocketGameProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketGameProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketGameProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTb2NrZXRHYW1lUHJvdG9jb2wucHJvdG8SElNvY2tldEdhbWVQcm90b2Nv",
            "bCKNAwoITWFpblBhY2sSNAoLcmVxdWVzdENvZGUYASABKA4yHy5Tb2NrZXRH",
            "YW1lUHJvdG9jb2wuUmVxdWVzdENvZGUSMgoKYWN0aW9uQ29kZRgCIAEoDjIe",
            "LlNvY2tldEdhbWVQcm90b2NvbC5BY3Rpb25Db2RlEjIKCnJldHVybkNvZGUY",
            "AyABKA4yHi5Tb2NrZXRHYW1lUHJvdG9jb2wuUmV0dXJuQ29kZRIwCglMb2dp",
            "blBhY2sYBCABKAsyHS5Tb2NrZXRHYW1lUHJvdG9jb2wuTG9naW5QYWNrEgsK",
            "A3N0chgFIAEoCRIuCghyb29tcGFjaxgGIAMoCzIcLlNvY2tldEdhbWVQcm90",
            "b2NvbC5Sb29tUGFjaxIyCgpwbGF5ZXJwYWNrGAcgAygLMh4uU29ja2V0R2Ft",
            "ZVByb3RvY29sLlBsYXllclBhY2sSMgoKQnVsbGV0UGFjaxgIIAEoCzIeLlNv",
            "Y2tldEdhbWVQcm90b2NvbC5CdWxsZXRQYWNrEgwKBHVzZXIYCSABKAkiLwoJ",
            "TG9naW5QYWNrEhAKCHVzZXJuYW1lGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJ",
            "Ik8KCFJvb21QYWNrEhAKCHJvb21uYW1lGAEgASgJEg4KBm1heG51bRgCIAEo",
            "BRISCgpjdXJyZW50bnVtGAMgASgFEg0KBXN0YXRlGAQgASgFImwKClBsYXll",
            "clBhY2sSEgoKcGxheWVybmFtZRgBIAEoCRIQCghwbGF5ZXJJRBgCIAEoCRIK",
            "CgJocBgDIAEoBRIsCgdwb3NwYWNrGAQgASgLMhsuU29ja2V0R2FtZVByb3Rv",
            "Y29sLlBvc1BhY2siRAoHUG9zUGFjaxIMCgRQb3NYGAEgASgCEgwKBFBvc1kY",
            "AiABKAISDAoEUm90WhgDIAEoAhIPCgdHdW5Sb3RaGAQgASgCIlwKCkJ1bGxl",
            "dFBhY2sSDAoEUG9zWBgBIAEoAhIMCgRQb3NZGAIgASgCEhEKCU1vdXNlUG9z",
            "WBgDIAEoAhIRCglNb3VzZVBvc1kYBCABKAISDAoEUm90WhgFIAEoAio8CgtS",
            "ZXF1ZXN0Q29kZRIPCgtSZXF1ZXN0Tm9uZRAAEggKBFVlc3IQARIICgRSb29t",
            "EAISCAoER2FtZRADKtYBCgpBY3Rpb25Db2RlEg4KCkFjdGlvbk5vbmUQABIJ",
            "CgVMb2dvbhABEgkKBUxvZ2luEAISDgoKQ3JlYXRlUm9vbRADEgwKCEZpbmRS",
            "b29tEAQSDgoKUGxheWVyTGlzdBAFEgwKCEpvaW5Sb29tEAYSCAoERXhpdBAH",
            "EggKBENoYXQQCBINCglTdGFydEdhbWUQCRIMCghTdGFydGluZxAKEgsKB1Vw",
            "U3RhdGUQCxIMCghFeGl0R2FtZRAMEhAKDFVwZGF0ZVBsYXllchANEggKBEZp",
            "cmUQDipCCgpSZXR1cm5Db2RlEg4KClJldHVybk5vbmUQABILCgdTdWNjZWVk",
            "EAESCgoGRmlsbGVkEAISCwoHTm90Um9vbRADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketGameProtocol.RequestCode), typeof(global::SocketGameProtocol.ActionCode), typeof(global::SocketGameProtocol.ReturnCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.MainPack), global::SocketGameProtocol.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "LoginPack", "Str", "Roompack", "Playerpack", "BulletPack", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.LoginPack), global::SocketGameProtocol.LoginPack.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.RoomPack), global::SocketGameProtocol.RoomPack.Parser, new[]{ "Roomname", "Maxnum", "Currentnum", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PlayerPack), global::SocketGameProtocol.PlayerPack.Parser, new[]{ "Playername", "PlayerID", "Hp", "Pospack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.PosPack), global::SocketGameProtocol.PosPack.Parser, new[]{ "PosX", "PosY", "RotZ", "GunRotZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtocol.BulletPack), global::SocketGameProtocol.BulletPack.Parser, new[]{ "PosX", "PosY", "MousePosX", "MousePosY", "RotZ" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    [pbr::OriginalName("Uesr")] Uesr = 1,
    [pbr::OriginalName("Room")] Room = 2,
    [pbr::OriginalName("Game")] Game = 3,
  }

  public enum ActionCode {
    /// <summary>
    ///None必须不同名
    /// </summary>
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///注册
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    ///登录
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    [pbr::OriginalName("CreateRoom")] CreateRoom = 3,
    /// <summary>
    /// </summary>
    [pbr::OriginalName("FindRoom")] FindRoom = 4,
    /// <summary>
    ///房间内玩家列表
    /// </summary>
    [pbr::OriginalName("PlayerList")] PlayerList = 5,
    /// <summary>
    ///加入房间
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 6,
    [pbr::OriginalName("Exit")] Exit = 7,
    /// <summary>
    ///聊天行为
    /// </summary>
    [pbr::OriginalName("Chat")] Chat = 8,
    /// <summary>
    ///开始游戏
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 9,
    /// <summary>
    ///客户端发来的真正的游戏开始指令
    /// </summary>
    [pbr::OriginalName("Starting")] Starting = 10,
    /// <summary>
    ///状态同步：
    /// </summary>
    [pbr::OriginalName("UpState")] UpState = 11,
    [pbr::OriginalName("ExitGame")] ExitGame = 12,
    /// <summary>
    ///更新游戏中的玩家列表
    /// </summary>
    [pbr::OriginalName("UpdatePlayer")] UpdatePlayer = 13,
    [pbr::OriginalName("Fire")] Fire = 14,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    [pbr::OriginalName("Succeed")] Succeed = 1,
    [pbr::OriginalName("Filled")] Filled = 2,
    [pbr::OriginalName("NotRoom")] NotRoom = 3,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      loginPack_ = other.loginPack_ != null ? other.loginPack_.Clone() : null;
      str_ = other.str_;
      roompack_ = other.roompack_.Clone();
      playerpack_ = other.playerpack_.Clone();
      bulletPack_ = other.bulletPack_ != null ? other.bulletPack_.Clone() : null;
      user_ = other.user_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::SocketGameProtocol.RequestCode requestCode_ = global::SocketGameProtocol.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::SocketGameProtocol.ActionCode actionCode_ = global::SocketGameProtocol.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::SocketGameProtocol.ReturnCode returnCode_ = global::SocketGameProtocol.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "LoginPack" field.</summary>
    public const int LoginPackFieldNumber = 4;
    private global::SocketGameProtocol.LoginPack loginPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.LoginPack LoginPack {
      get { return loginPack_; }
      set {
        loginPack_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 5;
    private string str_ = "";
    /// <summary>
    ///保证消息包发送出去
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roompack" field.</summary>
    public const int RoompackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.RoomPack> _repeated_roompack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketGameProtocol.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.RoomPack> roompack_ = new pbc::RepeatedField<global::SocketGameProtocol.RoomPack>();
    /// <summary>
    /// repeated=定义数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.RoomPack> Roompack {
      get { return roompack_; }
    }

    /// <summary>Field number for the "playerpack" field.</summary>
    public const int PlayerpackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SocketGameProtocol.PlayerPack> _repeated_playerpack_codec
        = pb::FieldCodec.ForMessage(58, global::SocketGameProtocol.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> playerpack_ = new pbc::RepeatedField<global::SocketGameProtocol.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtocol.PlayerPack> Playerpack {
      get { return playerpack_; }
    }

    /// <summary>Field number for the "BulletPack" field.</summary>
    public const int BulletPackFieldNumber = 8;
    private global::SocketGameProtocol.BulletPack bulletPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.BulletPack BulletPack {
      get { return bulletPack_; }
      set {
        bulletPack_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 9;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (!object.Equals(LoginPack, other.LoginPack)) return false;
      if (Str != other.Str) return false;
      if(!roompack_.Equals(other.roompack_)) return false;
      if(!playerpack_.Equals(other.playerpack_)) return false;
      if (!object.Equals(BulletPack, other.BulletPack)) return false;
      if (User != other.User) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (loginPack_ != null) hash ^= LoginPack.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      hash ^= roompack_.GetHashCode();
      hash ^= playerpack_.GetHashCode();
      if (bulletPack_ != null) hash ^= BulletPack.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (loginPack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LoginPack);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Str);
      }
      roompack_.WriteTo(output, _repeated_roompack_codec);
      playerpack_.WriteTo(output, _repeated_playerpack_codec);
      if (bulletPack_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BulletPack);
      }
      if (User.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (loginPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginPack);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      size += roompack_.CalculateSize(_repeated_roompack_codec);
      size += playerpack_.CalculateSize(_repeated_playerpack_codec);
      if (bulletPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BulletPack);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::SocketGameProtocol.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::SocketGameProtocol.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::SocketGameProtocol.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.loginPack_ != null) {
        if (loginPack_ == null) {
          LoginPack = new global::SocketGameProtocol.LoginPack();
        }
        LoginPack.MergeFrom(other.LoginPack);
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      roompack_.Add(other.roompack_);
      playerpack_.Add(other.playerpack_);
      if (other.bulletPack_ != null) {
        if (bulletPack_ == null) {
          BulletPack = new global::SocketGameProtocol.BulletPack();
        }
        BulletPack.MergeFrom(other.BulletPack);
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::SocketGameProtocol.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::SocketGameProtocol.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::SocketGameProtocol.ReturnCode) input.ReadEnum();
            break;
          }
          case 34: {
            if (loginPack_ == null) {
              LoginPack = new global::SocketGameProtocol.LoginPack();
            }
            input.ReadMessage(LoginPack);
            break;
          }
          case 42: {
            Str = input.ReadString();
            break;
          }
          case 50: {
            roompack_.AddEntriesFrom(input, _repeated_roompack_codec);
            break;
          }
          case 58: {
            playerpack_.AddEntriesFrom(input, _repeated_playerpack_codec);
            break;
          }
          case 66: {
            if (bulletPack_ == null) {
              BulletPack = new global::SocketGameProtocol.BulletPack();
            }
            input.ReadMessage(BulletPack);
            break;
          }
          case 74: {
            User = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomname_ = other.roomname_;
      maxnum_ = other.maxnum_;
      currentnum_ = other.currentnum_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomname" field.</summary>
    public const int RoomnameFieldNumber = 1;
    private string roomname_ = "";
    /// <summary>
    ///房间名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roomname {
      get { return roomname_; }
      set {
        roomname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxnum" field.</summary>
    public const int MaxnumFieldNumber = 2;
    private int maxnum_;
    /// <summary>
    ///房间最大数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Maxnum {
      get { return maxnum_; }
      set {
        maxnum_ = value;
      }
    }

    /// <summary>Field number for the "currentnum" field.</summary>
    public const int CurrentnumFieldNumber = 3;
    private int currentnum_;
    /// <summary>
    ///当前数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Currentnum {
      get { return currentnum_; }
      set {
        currentnum_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomname != other.Roomname) return false;
      if (Maxnum != other.Maxnum) return false;
      if (Currentnum != other.Currentnum) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomname.Length != 0) hash ^= Roomname.GetHashCode();
      if (Maxnum != 0) hash ^= Maxnum.GetHashCode();
      if (Currentnum != 0) hash ^= Currentnum.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Roomname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomname);
      }
      if (Maxnum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Maxnum);
      }
      if (Currentnum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Currentnum);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Roomname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomname);
      }
      if (Maxnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxnum);
      }
      if (Currentnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Currentnum);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.Roomname.Length != 0) {
        Roomname = other.Roomname;
      }
      if (other.Maxnum != 0) {
        Maxnum = other.Maxnum;
      }
      if (other.Currentnum != 0) {
        Currentnum = other.Currentnum;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomname = input.ReadString();
            break;
          }
          case 16: {
            Maxnum = input.ReadInt32();
            break;
          }
          case 24: {
            Currentnum = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      playername_ = other.playername_;
      playerID_ = other.playerID_;
      hp_ = other.hp_;
      pospack_ = other.pospack_ != null ? other.pospack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "playername" field.</summary>
    public const int PlayernameFieldNumber = 1;
    private string playername_ = "";
    /// <summary>
    ///玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Playername {
      get { return playername_; }
      set {
        playername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 2;
    private string playerID_ = "";
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerID {
      get { return playerID_; }
      set {
        playerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    ///玩家血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "pospack" field.</summary>
    public const int PospackFieldNumber = 4;
    private global::SocketGameProtocol.PosPack pospack_;
    /// <summary>
    ///位置信息包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtocol.PosPack Pospack {
      get { return pospack_; }
      set {
        pospack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Playername != other.Playername) return false;
      if (PlayerID != other.PlayerID) return false;
      if (Hp != other.Hp) return false;
      if (!object.Equals(Pospack, other.Pospack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Playername.Length != 0) hash ^= Playername.GetHashCode();
      if (PlayerID.Length != 0) hash ^= PlayerID.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (pospack_ != null) hash ^= Pospack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Playername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Playername);
      }
      if (PlayerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerID);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (pospack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pospack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Playername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Playername);
      }
      if (PlayerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerID);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (pospack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pospack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.Playername.Length != 0) {
        Playername = other.Playername;
      }
      if (other.PlayerID.Length != 0) {
        PlayerID = other.PlayerID;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.pospack_ != null) {
        if (pospack_ == null) {
          Pospack = new global::SocketGameProtocol.PosPack();
        }
        Pospack.MergeFrom(other.Pospack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Playername = input.ReadString();
            break;
          }
          case 18: {
            PlayerID = input.ReadString();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 34: {
            if (pospack_ == null) {
              Pospack = new global::SocketGameProtocol.PosPack();
            }
            input.ReadMessage(Pospack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PosPack : pb::IMessage<PosPack> {
    private static readonly pb::MessageParser<PosPack> _parser = new pb::MessageParser<PosPack>(() => new PosPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PosPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack(PosPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      rotZ_ = other.rotZ_;
      gunRotZ_ = other.gunRotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack Clone() {
      return new PosPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    /// <summary>
    ///玩家位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "RotZ" field.</summary>
    public const int RotZFieldNumber = 3;
    private float rotZ_;
    /// <summary>
    ///玩家旋转信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    /// <summary>Field number for the "GunRotZ" field.</summary>
    public const int GunRotZFieldNumber = 4;
    private float gunRotZ_;
    /// <summary>
    ///枪的旋转信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GunRotZ {
      get { return gunRotZ_; }
      set {
        gunRotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PosPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PosPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GunRotZ, other.GunRotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (GunRotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GunRotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(RotZ);
      }
      if (GunRotZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(GunRotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (GunRotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PosPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      if (other.GunRotZ != 0F) {
        GunRotZ = other.GunRotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            RotZ = input.ReadFloat();
            break;
          }
          case 37: {
            GunRotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BulletPack : pb::IMessage<BulletPack> {
    private static readonly pb::MessageParser<BulletPack> _parser = new pb::MessageParser<BulletPack>(() => new BulletPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulletPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtocol.SocketGameProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack(BulletPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      mousePosX_ = other.mousePosX_;
      mousePosY_ = other.mousePosY_;
      rotZ_ = other.rotZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulletPack Clone() {
      return new BulletPack(this);
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "MousePosX" field.</summary>
    public const int MousePosXFieldNumber = 3;
    private float mousePosX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MousePosX {
      get { return mousePosX_; }
      set {
        mousePosX_ = value;
      }
    }

    /// <summary>Field number for the "MousePosY" field.</summary>
    public const int MousePosYFieldNumber = 4;
    private float mousePosY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MousePosY {
      get { return mousePosY_; }
      set {
        mousePosY_ = value;
      }
    }

    /// <summary>Field number for the "RotZ" field.</summary>
    public const int RotZFieldNumber = 5;
    private float rotZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotZ {
      get { return rotZ_; }
      set {
        rotZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulletPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulletPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MousePosX, other.MousePosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MousePosY, other.MousePosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotZ, other.RotZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (MousePosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MousePosX);
      if (MousePosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MousePosY);
      if (RotZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (MousePosX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MousePosX);
      }
      if (MousePosY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MousePosY);
      }
      if (RotZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(RotZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (MousePosX != 0F) {
        size += 1 + 4;
      }
      if (MousePosY != 0F) {
        size += 1 + 4;
      }
      if (RotZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulletPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.MousePosX != 0F) {
        MousePosX = other.MousePosX;
      }
      if (other.MousePosY != 0F) {
        MousePosY = other.MousePosY;
      }
      if (other.RotZ != 0F) {
        RotZ = other.RotZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
          case 29: {
            MousePosX = input.ReadFloat();
            break;
          }
          case 37: {
            MousePosY = input.ReadFloat();
            break;
          }
          case 45: {
            RotZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
